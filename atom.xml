<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>novgis&#39;s blog</title>
  <subtitle>GIS - Creating our Future</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.novgis.com/"/>
  <updated>2016-06-01T03:25:38.293Z</updated>
  <id>http://www.novgis.com/</id>
  
  <author>
    <name>novgis</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Bing 地图切片规则分析</title>
    <link href="http://www.novgis.com/blog/2016-05-19/bing-map-tile-system.html"/>
    <id>http://www.novgis.com/blog/2016-05-19/bing-map-tile-system.html</id>
    <published>2016-05-19T13:45:51.000Z</published>
    <updated>2016-06-01T03:25:38.293Z</updated>
    
    <content type="html">&lt;p&gt;　　Bing Map 提供了一套全球的在线电子地图服务，用户可以在其上进行平移、缩放等操作。偌大数据量的全球地图，为了尽可能快地加速地图交互的响应速度，像其他几乎所有的在线地图一样，我们需要对地图数据进行预处理，把投影后的全球地图按照显示细节的层级分别切割成一块块的小图片（“瓦片”这个词描述的很形象），然后通过特定的索引算法快速地获取到区域内某个显示层级下的所有瓦片，然后进行无缝拼接展示，此时就比一次性展示整张地图数据要快的多得多。本文对 Bing Map 的地图投影、坐标系统以及地图瓦片的编码体系进行介绍，建立一套统一有规律、标准的&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/bb259689.aspx&quot; title=&quot;原文链接&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;地图瓦片系统&lt;/a&gt;。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;地图投影&quot;&gt;&lt;a href=&quot;#地图投影&quot; class=&quot;headerlink&quot; title=&quot;地图投影&quot;&gt;&lt;/a&gt;地图投影&lt;/h1&gt;&lt;p&gt;为了使地图看起来是无缝的，并且确保来自不同数据源的影像图能够完美拼接，必须要有一个统一的地图投影，Bing Map 采用了 Mercator 投影（实际应该是 Web Mercator 或叫 Spherical Mercator，为了计算和实现方便，直接将地球椭球体视为正球体然后再投影到正轴圆柱上），按这种方式投影后的平面地图是一张正方形的图片：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xteqg.com1.z0.glb.clouddn.com/novgis%2Fbing%20web%20mercator.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Mercator 投影的“等角”特性，保证了对象的形状不变形，正方形的物体投影后不会变成长方形，同时“等角”特性也保证了物体方向和相互位置的正确性；“圆柱”特性，保证了经线、纬线在投影之后都是平行直线，相互垂直，经线间隔相同，纬线从标准纬线向两级逐渐增大。这些特性符合我们的视觉心理并易于进行距离、方位、面积等量算，因此墨卡托投影在网络地图方面应用十分广泛。但是我们知道在投影分类中，等角投影和等积投影是永远冲突的，“等角”不可避免地带来了面积的巨大变形，特别是两极地区，明显的如格林兰岛比实际面积扩大了 N 倍。把圆柱当作投影面，也导致了 Mercator 投影在两极附近是趋于无限值，于是为了计算和实现的方便，人们便割舍了属于企鹅和北极熊的世界部分，将投影后的全球地图干脆依照赤道的周长整成正方形，这便形成了今后的 Web Mercator（Spherical Mercator）投影。&lt;br&gt;此时的 Web Mercator 投影坐标系（平面坐标系）以赤道和本初子午线交点为原点，向东向北为正，向西向南为负， X 轴和 Y 轴 取值范围都为赤道周长: [ -20037508.3427892, 20037508.3427892 ] (2πr = 2 x 3.1415926 x 6378137 ≈ 20037508.3427892) 而对应的地理坐标系（经纬度坐标），经度范围毫无疑问取全球[ -180, 180 ]，纬度通过反算，约为 85.05112877980659，因此纬度的取值范围即为 [ -85.05112877980659, 85.05112877980659 ]&lt;/p&gt;
&lt;h1 id=&quot;地面分辨率和地图比例尺&quot;&gt;&lt;a href=&quot;#地面分辨率和地图比例尺&quot; class=&quot;headerlink&quot; title=&quot;地面分辨率和地图比例尺&quot;&gt;&lt;/a&gt;地面分辨率和地图比例尺&lt;/h1&gt;&lt;p&gt;Ground Resolution，地面分辨率：即一个像素（pixel）代表的实际地面尺寸（米）。在经过上述 Web Mercator 投影后的地图缩放级别为 Level1 的时候，图片大小为 512＊512 pixel，以赤道为标准纬线那么赤道的地面分辨率为：赤道周长/512 (m/p)。一方面随着缩放级别的增加，地图的宽高也都分别以乘 2 的倍数递增，Level2 时图片大小为 1024＊1024，Level3 时为 2048＊2048，以此类推… 另一方面，随着纬度的向北向南递减，纬线圈的长度也会随之变化。那么很明显了，地面分辨率取决于两个参数：&lt;strong&gt;地图缩放级别level&lt;/strong&gt;和&lt;strong&gt;地理纬度latitude&lt;/strong&gt;，公式为：&lt;/p&gt;
&lt;p&gt;$$Ground Resolution = (cos(latitude × π/180) × 2 × π × 6378137 meters) / (256 × 2^l pixels)(meters/pixel)$$&lt;/p&gt;
&lt;p&gt;Map Scale，地图比例尺：即图上距离比上实际距离，以米为单位。在 Ground Resolution 的计算过程中，由地图缩放级别可以得到地图的像素大小，像素和实际距离是何种对应关系？&lt;strong&gt;DPI（dots per inch）&lt;/strong&gt;用来描述屏幕像素密度，屏幕上一英寸有多少个像素点，那么通过公式 $$256×2^l/DPI$$ 即得到相应的英寸，英寸再除以 0.0254 转换为米。因此地图比例尺的公式即为：&lt;br&gt;$$Map Scale = 256×2^l / screen dpi / 0.0254 / (cos(latitude×π/180)×2×π×6378137)$$&lt;/p&gt;
&lt;p&gt;比例尺一般都转换为 1：xxx，&lt;br&gt;$$Map Scale = 1 : (cos(latitude×π/180) × 2 × π × 6378137 × screen dpi) / (256 × 2^l × 0.0254)$$&lt;/p&gt;
&lt;p&gt;既然 Ground Resolution 和 Map Scale 都是描述和地图实际距离相关的参数，那么这两者的关系通过以上公式可以转换为：&lt;br&gt;$$Map Scale = 1 : Ground Resolution × screen dpi / 0.0254 (meters/inch)$$ &lt;/p&gt;
&lt;p&gt;下表显示了 Web Mercator 投影下不同地图缩放级别时的各参数对比：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Level of Detail&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Map Width and Height (pixels)&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Ground Resolution (meters / pixel)&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Map Scale&lt;/strong&gt; &lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;512&lt;/td&gt;
&lt;td&gt;78,271.5170&lt;/td&gt;
&lt;td&gt;1 : 295,829,355.45&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1,024&lt;/td&gt;
&lt;td&gt;39,135.7585&lt;/td&gt;
&lt;td&gt;1 : 147,914,677.73&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;2,048&lt;/td&gt;
&lt;td&gt;19,567.8792&lt;/td&gt;
&lt;td&gt;1 : 73,957,338.86&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;4,096&lt;/td&gt;
&lt;td&gt;9,783.9396&lt;/td&gt;
&lt;td&gt;1 : 36,978,669.43&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;8,192&lt;/td&gt;
&lt;td&gt;4,891.9698&lt;/td&gt;
&lt;td&gt;1 : 18,489,334.72&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;16,384&lt;/td&gt;
&lt;td&gt;2,445.9849&lt;/td&gt;
&lt;td&gt;1 : 9,244,667.36&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;32,768&lt;/td&gt;
&lt;td&gt;1,222.9925&lt;/td&gt;
&lt;td&gt;1 : 4,622,333.68&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;65,536&lt;/td&gt;
&lt;td&gt;611.4962&lt;/td&gt;
&lt;td&gt;1 : 2,311,166.84&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;131,072&lt;/td&gt;
&lt;td&gt;305.7481&lt;/td&gt;
&lt;td&gt;1 : 1,155,583.42&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;262,144&lt;/td&gt;
&lt;td&gt;152.8741&lt;/td&gt;
&lt;td&gt;1 : 577,791.71&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;524,288&lt;/td&gt;
&lt;td&gt;76.4370&lt;/td&gt;
&lt;td&gt;1 : 288,895.85&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;1,048,576&lt;/td&gt;
&lt;td&gt;38.2185&lt;/td&gt;
&lt;td&gt;1 : 144,447.93&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;2,097,152&lt;/td&gt;
&lt;td&gt;19.1093&lt;/td&gt;
&lt;td&gt;1 : 72,223.96&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;4,194,304&lt;/td&gt;
&lt;td&gt;9.5546&lt;/td&gt;
&lt;td&gt;1 : 36,111.98&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;8,388,608&lt;/td&gt;
&lt;td&gt;4.7773&lt;/td&gt;
&lt;td&gt;1 : 18,055.99&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;16,777,216&lt;/td&gt;
&lt;td&gt;2.3887&lt;/td&gt;
&lt;td&gt;1 : 9,028.00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;33,554,432&lt;/td&gt;
&lt;td&gt;1.1943&lt;/td&gt;
&lt;td&gt;1 : 4,514.00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;67,108,864&lt;/td&gt;
&lt;td&gt;0.5972&lt;/td&gt;
&lt;td&gt;1 : 2,257.00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;19&lt;/td&gt;
&lt;td&gt;134,217,728&lt;/td&gt;
&lt;td&gt;0.2986&lt;/td&gt;
&lt;td&gt;1 : 1,128.50&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;td&gt;268,435,456&lt;/td&gt;
&lt;td&gt;0.1493&lt;/td&gt;
&lt;td&gt;1 : 564.25&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;21&lt;/td&gt;
&lt;td&gt;536,870,912&lt;/td&gt;
&lt;td&gt;0.0746&lt;/td&gt;
&lt;td&gt;1 : 282.12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;td&gt;1,073,741,824&lt;/td&gt;
&lt;td&gt;0.0373&lt;/td&gt;
&lt;td&gt;1 : 141.06&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;23&lt;/td&gt;
&lt;td&gt;2,147,483,648&lt;/td&gt;
&lt;td&gt;0.0187&lt;/td&gt;
&lt;td&gt;1 : 70.53&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&quot;地理坐标与像素坐标的转换&quot;&gt;&lt;a href=&quot;#地理坐标与像素坐标的转换&quot; class=&quot;headerlink&quot; title=&quot;地理坐标与像素坐标的转换&quot;&gt;&lt;/a&gt;地理坐标与像素坐标的转换&lt;/h1&gt;&lt;p&gt;我们按上述规则选定了投影坐标系和地图比例尺之后，我们便可以将平面的地理坐标转换为对应的像素坐标。地图在某个缩放级别下像素大小是固定的，Bing Map 以地图的左上角为原点，那么右下角的坐标通过公式便可以很方便的计算出来 (256×2^level-1, 256×2^level-1)。例如，在 Level3 的时候，像素坐标的范围即为(0,0) 到 (2047,2047)，如下图：&lt;br&gt;&lt;img src=&quot;http://7xteqg.com1.z0.glb.clouddn.com/novgis%2Fpixel%20cordinates.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;那给出一个 WGS84 基准面下的点经纬度坐标，便可以通过如下公式计算出其像素坐标：&lt;br&gt;$$sinLatitude = sin(latitude×π/180)$$&lt;br&gt;$$pixelX = ((longitude + 180)/360)×256×2^l$$&lt;br&gt;$$pixelY = (0.5 - log((1 + sinLatitude)/(1 - sinLatitude))/(4×π))×256×2^l$$&lt;/p&gt;
&lt;h1 id=&quot;Bing-Map-采用的四叉树瓦片编码规则&quot;&gt;&lt;a href=&quot;#Bing-Map-采用的四叉树瓦片编码规则&quot; class=&quot;headerlink&quot; title=&quot;Bing Map 采用的四叉树瓦片编码规则&quot;&gt;&lt;/a&gt;Bing Map 采用的四叉树瓦片编码规则&lt;/h1&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;　　Bing Map 提供了一套全球的在线电子地图服务，用户可以在其上进行平移、缩放等操作。偌大数据量的全球地图，为了尽可能快地加速地图交互的响应速度，像其他几乎所有的在线地图一样，我们需要对地图数据进行预处理，把投影后的全球地图按照显示细节的层级分别切割成一块块的小图片（“瓦片”这个词描述的很形象），然后通过特定的索引算法快速地获取到区域内某个显示层级下的所有瓦片，然后进行无缝拼接展示，此时就比一次性展示整张地图数据要快的多得多。本文对 Bing Map 的地图投影、坐标系统以及地图瓦片的编码体系进行介绍，建立一套统一有规律、标准的&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/bb259689.aspx&quot; title=&quot;原文链接&quot;&gt;地图瓦片系统&lt;/a&gt;。&lt;br&gt;
    
    </summary>
    
      <category term="gis" scheme="http://www.novgis.com/categories/gis/"/>
    
    
      <category term="tile" scheme="http://www.novgis.com/tags/tile/"/>
    
  </entry>
  
  <entry>
    <title>osmdroid源码解析</title>
    <link href="http://www.novgis.com/blog/2016-05-19/osmdroid-1.html"/>
    <id>http://www.novgis.com/blog/2016-05-19/osmdroid-1.html</id>
    <published>2016-05-19T08:14:54.000Z</published>
    <updated>2016-05-19T09:21:57.315Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;&quot;&gt;osmdroid&lt;/a&gt; 是一款开源 Android 地图开发库，设计用于替代 Google 自带的地图类库，包含了自定义的 MapView 控件、瓦片地图引擎 TileProvider，支持在线和离线地图、地图缓存以及各类覆盖物图层和绘制图形等。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;功能介绍&quot;&gt;&lt;a href=&quot;#功能介绍&quot; class=&quot;headerlink&quot; title=&quot;功能介绍&quot;&gt;&lt;/a&gt;功能介绍&lt;/h2&gt;&lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;h3 id=&quot;核心概念&quot;&gt;&lt;a href=&quot;#核心概念&quot; class=&quot;headerlink&quot; title=&quot;核心概念&quot;&gt;&lt;/a&gt;核心概念&lt;/h3&gt;&lt;h2 id=&quot;总体设计&quot;&gt;&lt;a href=&quot;#总体设计&quot; class=&quot;headerlink&quot; title=&quot;总体设计&quot;&gt;&lt;/a&gt;总体设计&lt;/h2&gt;&lt;h2 id=&quot;流程图&quot;&gt;&lt;a href=&quot;#流程图&quot; class=&quot;headerlink&quot; title=&quot;流程图&quot;&gt;&lt;/a&gt;流程图&lt;/h2&gt;&lt;h2 id=&quot;详细设计&quot;&gt;&lt;a href=&quot;#详细设计&quot; class=&quot;headerlink&quot; title=&quot;详细设计&quot;&gt;&lt;/a&gt;详细设计&lt;/h2&gt;&lt;h3 id=&quot;系统架构图&quot;&gt;&lt;a href=&quot;#系统架构图&quot; class=&quot;headerlink&quot; title=&quot;系统架构图&quot;&gt;&lt;/a&gt;系统架构图&lt;/h3&gt;&lt;h3 id=&quot;核心类功能介绍&quot;&gt;&lt;a href=&quot;#核心类功能介绍&quot; class=&quot;headerlink&quot; title=&quot;核心类功能介绍&quot;&gt;&lt;/a&gt;核心类功能介绍&lt;/h3&gt;&lt;h2 id=&quot;小结&quot;&gt;&lt;a href=&quot;#小结&quot; class=&quot;headerlink&quot; title=&quot;小结&quot;&gt;&lt;/a&gt;小结&lt;/h2&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;&quot;&gt;osmdroid&lt;/a&gt; 是一款开源 Android 地图开发库，设计用于替代 Google 自带的地图类库，包含了自定义的 MapView 控件、瓦片地图引擎 TileProvider，支持在线和离线地图、地图缓存以及各类覆盖物图层和绘制图形等。&lt;br&gt;
    
    </summary>
    
      <category term="programming" scheme="http://www.novgis.com/categories/programming/"/>
    
    
      <category term="android" scheme="http://www.novgis.com/tags/android/"/>
    
      <category term="osmdroid" scheme="http://www.novgis.com/tags/osmdroid/"/>
    
  </entry>
  
  <entry>
    <title>森林防火标绘业务系统实现（一）</title>
    <link href="http://www.novgis.com/blog/2016-05-12/GJB-1.html"/>
    <id>http://www.novgis.com/blog/2016-05-12/GJB-1.html</id>
    <published>2016-05-12T08:44:15.000Z</published>
    <updated>2016-05-19T15:08:17.475Z</updated>
    
    <content type="html">&lt;p&gt;本系列文章主要介绍基于 ArcGIS Engine 实现的森林防火标绘业务系统&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本系列文章主要介绍基于 ArcGIS Engine 实现的森林防火标绘业务系统&lt;br&gt;
    
    </summary>
    
      <category term="gis" scheme="http://www.novgis.com/categories/gis/"/>
    
    
      <category term="plot" scheme="http://www.novgis.com/tags/plot/"/>
    
  </entry>
  
  <entry>
    <title>(4) JSP（上）</title>
    <link href="http://www.novgis.com/blog/2016-05-06/javaweb-04-JSP.html"/>
    <id>http://www.novgis.com/blog/2016-05-06/javaweb-04-JSP.html</id>
    <published>2016-05-06T09:45:35.000Z</published>
    <updated>2016-05-13T02:09:00.251Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
      <category term="programming" scheme="http://www.novgis.com/categories/programming/"/>
    
    
      <category term="Java Web" scheme="http://www.novgis.com/tags/Java-Web/"/>
    
  </entry>
  
  <entry>
    <title>(3) Servlet（下）</title>
    <link href="http://www.novgis.com/blog/2016-05-06/javaweb-03-servlet2.html"/>
    <id>http://www.novgis.com/blog/2016-05-06/javaweb-03-servlet2.html</id>
    <published>2016-05-06T07:20:21.000Z</published>
    <updated>2016-05-13T02:08:55.570Z</updated>
    
    <content type="html">&lt;p&gt;接上篇，本篇介绍两组重要的接口 ServletRequest 和 HttpServletRequest，ServletResponse 和 HttpServletResponse，两个基础类 GenericServlet 和 HttpServlet 以及 GET、POST 请求、请求转发、请求重定向等知识域。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;Http-协议简介&quot;&gt;&lt;a href=&quot;#Http-协议简介&quot; class=&quot;headerlink&quot; title=&quot;Http 协议简介&quot;&gt;&lt;/a&gt;Http 协议简介&lt;/h1&gt;&lt;p&gt;Http 协议用于定义 Web 浏览器与 Web 服务器之间交换数据的过程以及数据本身的格式。是一种短暂的无状态的协议，每次连接只处理一个请求和响应。浏览器到 WEB 服务器之间的所有通讯都是完全独立分开的请求和响应对。Http 协议的会话方式如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xteqg.com1.z0.glb.clouddn.com/novgis%2Fjavaweb-10-http.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;当我们访问一个有多张图片的网页的时候其过程如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xteqg.com1.z0.glb.clouddn.com/novgis%2Fjavaweb-11-http2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;Http-请求消息的结构&quot;&gt;&lt;a href=&quot;#Http-请求消息的结构&quot; class=&quot;headerlink&quot; title=&quot;Http 请求消息的结构&quot;&gt;&lt;/a&gt;Http 请求消息的结构&lt;/h3&gt;&lt;p&gt;基本结构：一个请求行，若干消息头、以及实体内容，其中的一些消息头和实体内容都是可选的，消息头和实体内容之间要用空行隔开。&lt;/p&gt;
&lt;h3 id=&quot;Http-响应消息的结构&quot;&gt;&lt;a href=&quot;#Http-响应消息的结构&quot; class=&quot;headerlink&quot; title=&quot;Http 响应消息的结构&quot;&gt;&lt;/a&gt;Http 响应消息的结构&lt;/h3&gt;&lt;p&gt;基本结构：一个状态行、若干消息头、以及实体内容，其中的一些消息头和实体内容都是可选的，消息头和实体内容之间要用空行隔开。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;接上篇，本篇介绍两组重要的接口 ServletRequest 和 HttpServletRequest，ServletResponse 和 HttpServletResponse，两个基础类 GenericServlet 和 HttpServlet 以及 GET、POST 请求、请求转发、请求重定向等知识域。&lt;br&gt;
    
    </summary>
    
      <category term="programming" scheme="http://www.novgis.com/categories/programming/"/>
    
    
      <category term="Java Web" scheme="http://www.novgis.com/tags/Java-Web/"/>
    
  </entry>
  
  <entry>
    <title>(2) Servlet（上）</title>
    <link href="http://www.novgis.com/blog/2016-05-05/javaweb-02-servlet.html"/>
    <id>http://www.novgis.com/blog/2016-05-05/javaweb-02-servlet.html</id>
    <published>2016-05-05T09:39:48.000Z</published>
    <updated>2016-05-13T02:08:50.398Z</updated>
    
    <content type="html">&lt;p&gt;Java Servlet 是和平台无关的服务器端组件，它运行在 Servlet 容器中。Servlet 容器负责 Servlet 和客户的通信以及调用 Servlet 的方法。Servlet 和客户的通信采用“请求/响应”的模式。本篇介绍 Servlet 的 HelloWorld 程序运行的基本原理、Servlet 的生命周期方法、ServletConfig、ServletContext接口等&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xteqg.com1.z0.glb.clouddn.com/novgis%2Fjavaweb-05-servlet%20request.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;Servlet 可以完成如下功能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建并返回基于客户请求的动态 HTML 页面&lt;/li&gt;
&lt;li&gt;创建可嵌入到现有 HTML 页面中的 HTML 片段&lt;/li&gt;
&lt;li&gt;与其它服务器资源（如数据库或基于 Java 的应用程序）进行通信&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Servlet-HelloWorld&quot;&gt;&lt;a href=&quot;#Servlet-HelloWorld&quot; class=&quot;headerlink&quot; title=&quot;Servlet HelloWorld&quot;&gt;&lt;/a&gt;Servlet HelloWorld&lt;/h1&gt;&lt;p&gt;查看 JavaEE API文档可知 Servlet 其实是一个接口，&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xteqg.com1.z0.glb.clouddn.com/novgis%2Fjavaweb-06-servlet%20interface.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;依据基本的编程思想，我们就去新建一个实现该-Servlet-接口的类：&quot;&gt;&lt;a href=&quot;#依据基本的编程思想，我们就去新建一个实现该-Servlet-接口的类：&quot; class=&quot;headerlink&quot; title=&quot;依据基本的编程思想，我们就去新建一个实现该 Servlet 接口的类：&quot;&gt;&lt;/a&gt;依据基本的编程思想，我们就去新建一个实现该 Servlet 接口的类：&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;HelloServlet&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Servlet&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;HelloServlet&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;constructor&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ServletConfig config)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; ServletException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;init&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; ServletConfig &lt;span class=&quot;title&quot;&gt;getServletConfig&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;getServletConfig&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ServletRequest req, ServletResponse res)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; ServletException, IOException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;service&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;getServletInfo&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;getServletInfo&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;destroy&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;destroy&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果是一般的 Java 类，我们接下来会写一个测试类来测试这个类，但是之前介绍 Servlet 的时候我们知道它是要部署到 Servlet 容器中执行，那么我们要做的就是怎么把这个 Servlet 放进容器？&lt;/p&gt;
&lt;h3 id=&quot;通过在-web-xml-文件中配置-Servlet-节点的方式实现：&quot;&gt;&lt;a href=&quot;#通过在-web-xml-文件中配置-Servlet-节点的方式实现：&quot; class=&quot;headerlink&quot; title=&quot;通过在 web.xml 文件中配置 Servlet 节点的方式实现：&quot;&gt;&lt;/a&gt;通过在 web.xml 文件中配置 Servlet 节点的方式实现：&lt;/h3&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 配置和映射 Servlet --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;servlet&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- Servlet 注册的名字 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;servlet-name&lt;/span&gt;&amp;gt;&lt;/span&gt;helloServlet&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;servlet-name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- Servlet 的全类名 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;servlet-class&lt;/span&gt;&amp;gt;&lt;/span&gt;com.novgis.javaweb.HelloServlet&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;servlet-class&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;servlet&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;servlet-mapping&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 需要和某一个 Servlet 节点的 servlet-name 子节点的文本节点一致 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;servlet-name&lt;/span&gt;&amp;gt;&lt;/span&gt;helloServlet&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;servlet-name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 映射具体的访问路径：/ 反斜杠代表 Web 应用的根目录（http://localhost:8080/Hello_JavaWeb/） --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;url-pattern&lt;/span&gt;&amp;gt;&lt;/span&gt;/hello&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;url-pattern&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;servlet-mapping&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;访问 &lt;code&gt;http://localhost:8080/Hello_JavaWeb/hello&lt;/code&gt;，查看控制台 Servlet 的生命周期方法的执行情况：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xteqg.com1.z0.glb.clouddn.com/novgis%2Fjavaweb-07-servlet%20lifecycle.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;Servlet-生命周期方法（都是由-Servlet-容器负责调用）：&quot;&gt;&lt;a href=&quot;#Servlet-生命周期方法（都是由-Servlet-容器负责调用）：&quot; class=&quot;headerlink&quot; title=&quot;Servlet 生命周期方法（都是由 Servlet 容器负责调用）：&quot;&gt;&lt;/a&gt;Servlet 生命周期方法（都是由 Servlet 容器负责调用）：&lt;/h3&gt;&lt;p&gt;构造器：只被调用一次！只有在第一次请求 Servlet 时，创建 Servlet 的实例，调用构造器。这说明 Servlet 是单实例的！（既然是单实例那就可能存在线程安全问题（要深入去看 Java 是如何实现这个单例的），所以不推荐在 Servlet 中写全局变量。）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在配置 Servlet 节点时，&lt;code&gt;load-on-startup&lt;/code&gt; 参数可以指定该 Servlet 被创建的时机：&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;servlet&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;servlet-name&lt;/span&gt;&amp;gt;&lt;/span&gt;secondServlet&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;servlet-name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;servlet-class&lt;/span&gt;&amp;gt;&lt;/span&gt;com.novgis.javaweb.SecondServlet&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;servlet-class&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 控制 Servlet 创建的时机 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;load-on-startup&lt;/span&gt;&amp;gt;&lt;/span&gt;2&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;load-on-startup&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;servlet&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;若取值为负数，则在第一次请求时被创建&lt;/li&gt;
&lt;li&gt;若取值为 0 或任意正整数，则在当前 Web 应用被 Servlet 容器加载时创建实例，且多个 Servlet 之间数值越小的越早被创建&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;init 方法：只被调用一次。在创建好实例后立即被调用，用于初始化当前 Servlet。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;为什么不在构造器中初始化而要在 &lt;code&gt;public void init(ServletConfig config)&lt;/code&gt; 方法中执行初始化工作，因为该方法传入一个 &lt;code&gt;ServletConfig&lt;/code&gt; 类型的参数，这个参数可以获取 &lt;code&gt;ServletContext&lt;/code&gt; 对象，是构造器所不及的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;service 方法：被多次调用。每次请求都会调用该方法。用于实际处理请求的方法。&lt;/p&gt;
&lt;p&gt;destroy 方法：只被调用一次。在当前 Servlet 所在的 Web 应用被卸载前调用，用于释放当前 Servlet 所占用的资源。&lt;/p&gt;
&lt;h3 id=&quot;总结一下-Servlet-容器响应客户请求的过程&quot;&gt;&lt;a href=&quot;#总结一下-Servlet-容器响应客户请求的过程&quot; class=&quot;headerlink&quot; title=&quot;总结一下 Servlet 容器响应客户请求的过程&quot;&gt;&lt;/a&gt;总结一下 Servlet 容器响应客户请求的过程&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;Servlet 引擎检查是否已经装载并创建了该 Servlet 的实例对象，如果是，则直接执行第 4 步，否则执行第 2 步；&lt;/li&gt;
&lt;li&gt;装载并创建该 Servlet 的一个实例对象：即调用该 Servlet 的构造器&lt;/li&gt;
&lt;li&gt;调用 Servlet 实例对象的 init() 方法&lt;/li&gt;
&lt;li&gt;创建一个用于封装请求的 ServletRequest 对象和一个代表响应信息的 ServletResponse 对象，然后调用 Servlet 的 service() 方法并将请求和响应对象作为参数传递进去&lt;/li&gt;
&lt;li&gt;Web 应用程序被停止或重新启动之前，Servlet 引擎将卸载 Servlet，并在卸载之前调用其destroy() 方法释放资源&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;Servlet-映射的细节&quot;&gt;&lt;a href=&quot;#Servlet-映射的细节&quot; class=&quot;headerlink&quot; title=&quot;Servlet 映射的细节&quot;&gt;&lt;/a&gt;Servlet 映射的细节&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;同一个 Servlet 可以被映射到多个 URL 上：&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- servlet-name 一致而 url-pattern 不同 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;servlet-mapping&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;servlet-name&lt;/span&gt;&amp;gt;&lt;/span&gt;helloServlet&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;servlet-name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;url-pattern&lt;/span&gt;&amp;gt;&lt;/span&gt;/hello&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;url-pattern&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;servlet-mapping&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;servlet-mapping&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;servlet-name&lt;/span&gt;&amp;gt;&lt;/span&gt;helloServlet&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;servlet-name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;url-pattern&lt;/span&gt;&amp;gt;&lt;/span&gt;/hello2&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;url-pattern&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;servlet-mapping&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在 Servlet 映射到的 URL 中也可以使用 &lt;code&gt;*&lt;/code&gt; 通配符，但是只能有两种固定的形式：一种是&lt;code&gt;*.扩展名&lt;/code&gt;，另外一种是以正斜杠 &lt;code&gt;/&lt;/code&gt; 开头并以 &lt;code&gt;/*&lt;/code&gt; 结尾。&lt;code&gt;/*.action&lt;/code&gt; 这种形式是错误的&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;servlet-mapping&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;servlet-name&lt;/span&gt;&amp;gt;&lt;/span&gt;AnyName&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;servlet-name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 以 AnyName 配置的 Servlet 将处理所有以 .do 结尾的请求 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;url-pattern&lt;/span&gt;&amp;gt;&lt;/span&gt;*.do&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;url-pattern&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;servlet-mapping&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;servlet-mapping&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;servlet-name&lt;/span&gt;&amp;gt;&lt;/span&gt;AnyName&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;servlet-name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 以 AnyName 配置的 Servlet 将处理 /action 虚拟目录下的所有请求 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;url-pattern&lt;/span&gt;&amp;gt;&lt;/span&gt;/action/*&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;url-pattern&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;servlet-mapping&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;ServletConfig-对象&quot;&gt;&lt;a href=&quot;#ServletConfig-对象&quot; class=&quot;headerlink&quot; title=&quot;ServletConfig 对象&quot;&gt;&lt;/a&gt;ServletConfig 对象&lt;/h3&gt;&lt;p&gt;封装了 Servlet 的配置信息，通过 ServletConfig 对象可以获取当前 Servlet 的初始化参数和 ServletContext 对象。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xteqg.com1.z0.glb.clouddn.com/novgis%2Fjavaweb-08-servletconfig.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;获取当前-Servlet-的初始化参数&quot;&gt;&lt;a href=&quot;#获取当前-Servlet-的初始化参数&quot; class=&quot;headerlink&quot; title=&quot;获取当前 Servlet 的初始化参数&quot;&gt;&lt;/a&gt;获取当前 Servlet 的初始化参数&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;先在 web.xml 文件里配置 Servlet 的初始化参数：&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;servlet&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;servlet-name&lt;/span&gt;&amp;gt;&lt;/span&gt;helloServlet&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;servlet-name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;servlet-class&lt;/span&gt;&amp;gt;&lt;/span&gt;com.novgis.javaweb.HelloServlet&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;servlet-class&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 配置初始化参数 --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;init-param&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;param-name&lt;/span&gt;&amp;gt;&lt;/span&gt;user&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;param-name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;param-value&lt;/span&gt;&amp;gt;&lt;/span&gt;root&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;param-value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;init-param&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;init-param&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;param-name&lt;/span&gt;&amp;gt;&lt;/span&gt;password&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;param-name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;param-value&lt;/span&gt;&amp;gt;&lt;/span&gt;1230&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;param-value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;init-param&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;load-on-startup&lt;/span&gt;&amp;gt;&lt;/span&gt;2&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;load-on-startup&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;servlet&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;获取方式：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ServletConfig config)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; ServletException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;init&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Enumeration&amp;lt;String&amp;gt; pair = config.getInitParameterNames();&lt;span class=&quot;comment&quot;&gt;//获取所有初始化参数的名字的集合&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (pair.hasMoreElements()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		String name = (String) pair.nextElement();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		String value = config.getInitParameter(name);&lt;span class=&quot;comment&quot;&gt;//获取指定名字的初始化参数值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.out.println(name+&lt;span class=&quot;string&quot;&gt;&quot;:&quot;&lt;/span&gt;+value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	String servletName = config.getServletName();&lt;span class=&quot;comment&quot;&gt;//获取该 Servlet 配置的 servlet-name，不常用！&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;ServletContext-对象（很重要），由-ServletConfig-getServletContext-获取&quot;&gt;&lt;a href=&quot;#ServletContext-对象（很重要），由-ServletConfig-getServletContext-获取&quot; class=&quot;headerlink&quot; title=&quot;ServletContext 对象（很重要），由 ServletConfig.getServletContext() 获取&quot;&gt;&lt;/a&gt;ServletContext 对象（很重要），由 ServletConfig.getServletContext() 获取&lt;/h3&gt;&lt;p&gt;Servlet 引擎为每个 Web 应用程序都创建一个对应的 ServletContext 对象，包含在 ServletConfig 对象中。一个 Web 应用程序中的所有 Servlet 对象都共享同一个 ServletContext 对象，所以其又被称之为 application 对象（Web 应用程序对象）。可以认为是当前 WEB 应用的大管家，可以从中获取到当前 WEB 应用的各个方面的信息。&lt;/p&gt;
&lt;p&gt;功能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;获取 WEB 应用程序的初始化参数&lt;/li&gt;
&lt;li&gt;记录日志&lt;/li&gt;
&lt;li&gt;application 域范围的属性&lt;/li&gt;
&lt;li&gt;访问资源文件&lt;/li&gt;
&lt;li&gt;获取虚拟路径所映射的本地路径&lt;/li&gt;
&lt;li&gt;WEB 应用程序之间的访问&lt;/li&gt;
&lt;li&gt;ServletContext 的其它方法&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;getInitParameter-获取当前-WEB-应用程序的初始化参数&quot;&gt;&lt;a href=&quot;#getInitParameter-获取当前-WEB-应用程序的初始化参数&quot; class=&quot;headerlink&quot; title=&quot;getInitParameter 获取当前 WEB 应用程序的初始化参数&quot;&gt;&lt;/a&gt;getInitParameter 获取当前 WEB 应用程序的初始化参数&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;先在 web.xml 文件里配置当前 WEB 应用的初始化参数：&lt;figure class=&quot;highlight livecodeserver&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;web-app xmlns:xsi=&lt;span class=&quot;string&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	xmlns=&lt;span class=&quot;string&quot;&gt;&quot;http://java.sun.com/xml/ns/javaee&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	xsi:schemaLocation=&lt;span class=&quot;string&quot;&gt;&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	id=&lt;span class=&quot;string&quot;&gt;&quot;WebApp_ID&quot;&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;version&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;2.5&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;context-&lt;span class=&quot;built_in&quot;&gt;param&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;lt;&lt;span class=&quot;built_in&quot;&gt;param&lt;/span&gt;-name&amp;gt;driver&amp;lt;/&lt;span class=&quot;built_in&quot;&gt;param&lt;/span&gt;-name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;lt;&lt;span class=&quot;built_in&quot;&gt;param&lt;/span&gt;-&lt;span class=&quot;built_in&quot;&gt;value&lt;/span&gt;&amp;gt;com.mysql.jdbc.Driver&amp;lt;/&lt;span class=&quot;built_in&quot;&gt;param&lt;/span&gt;-&lt;span class=&quot;built_in&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;/context-&lt;span class=&quot;built_in&quot;&gt;param&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/web-app&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;区别「当前 WEB应用的初始化参数」和「当前 Servlet 的初始化参数」：全局和局部的关系&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;获取方式：&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ServletConfig config)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; ServletException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ServletContext context = config.getServletContext();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	String driver = context.getInitParameter(&lt;span class=&quot;string&quot;&gt;&quot;driver&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;driver: &quot;&lt;/span&gt;+driver);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;getRealPath-获取当前-WEB-应用的某个文件在服务器上的绝对路径&quot;&gt;&lt;a href=&quot;#getRealPath-获取当前-WEB-应用的某个文件在服务器上的绝对路径&quot; class=&quot;headerlink&quot; title=&quot;getRealPath 获取当前 WEB 应用的某个文件在服务器上的绝对路径&quot;&gt;&lt;/a&gt;getRealPath 获取当前 WEB 应用的某个文件在服务器上的绝对路径&lt;/h4&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;String realPath = context.getRealPath(&lt;span class=&quot;string&quot;&gt;&quot;/note.txt&quot;&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//反斜杠代表当前WEB应用根目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//获取的是文件在部署后服务器上的绝对路径，而不是开发时本地机器的文件绝对路径&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//F:\Java\Samples\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\wtpwebapps\Hello JavaWeb\note.txt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(realPath);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;getContextPath-获取当前-WEB-应用的上下文路径&quot;&gt;&lt;a href=&quot;#getContextPath-获取当前-WEB-应用的上下文路径&quot; class=&quot;headerlink&quot; title=&quot;getContextPath 获取当前 WEB 应用的上下文路径&quot;&gt;&lt;/a&gt;getContextPath 获取当前 WEB 应用的上下文路径&lt;/h4&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;String contextPath = context.getContextPath();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// /Hello_JavaWeb&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;contextPath: &quot;&lt;/span&gt;+contextPath);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;getResourceAsStream-获取当前-WEB-应用根目录下某个资源的输入流&quot;&gt;&lt;a href=&quot;#getResourceAsStream-获取当前-WEB-应用根目录下某个资源的输入流&quot; class=&quot;headerlink&quot; title=&quot;getResourceAsStream 获取当前 WEB 应用根目录下某个资源的输入流&quot;&gt;&lt;/a&gt;getResourceAsStream 获取当前 WEB 应用根目录下某个资源的输入流&lt;/h4&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//jdbc.properties 源文件放在 src 根目录下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ClassLoader classLoader = getClass().getClassLoader();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	InputStream is = classLoader.getResourceAsStream(&lt;span class=&quot;string&quot;&gt;&quot;jdbc.properties&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;ClassLoader&#39;s : &quot;&lt;/span&gt; + is);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Exception e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	InputStream is2 = context.getResourceAsStream(&lt;span class=&quot;string&quot;&gt;&quot;/WEB-INF/classes/jdbc.properties&quot;&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//注意此处的路径写法，/ 代表WEB应用根目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;ServletContext&#39;s : &quot;&lt;/span&gt; + is2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Exception e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Class.getResourceAsStream(String path) ：&lt;br&gt;path 不以’/‘开头时默认是从此类所在的包下取资源，以’/‘开头则是从 ClassPath(src根目录)根下获取。其只是通过 path 构造一个绝对路径，最终还是由 ClassLoader 获取资源。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Class.getClassLoader.getResourceAsStream(String path) ：&lt;br&gt;默认则是从 ClassPath 根下获取，path 不能以’/‘开头，最终是由 ClassLoader 获取资源。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ServletContext. getResourceAsStream(String path)：&lt;br&gt;默认从 Web 应用根目录(WebContent根目录)下取资源，Tomcat 下 path 是否以’/‘开头无所谓，当然这和具体的容器实现有关。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;跟-Attribute-相关的方法：结合-ServletRequest-再来介绍&quot;&gt;&lt;a href=&quot;#跟-Attribute-相关的方法：结合-ServletRequest-再来介绍&quot; class=&quot;headerlink&quot; title=&quot;跟 Attribute 相关的方法：结合 ServletRequest 再来介绍&quot;&gt;&lt;/a&gt;跟 Attribute 相关的方法：结合 ServletRequest 再来介绍&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;getAttribute(String name) &lt;/li&gt;
&lt;li&gt;getAttributeName(String name) &lt;/li&gt;
&lt;li&gt;removeAttribute(String name) &lt;/li&gt;
&lt;li&gt;setAttribute(String name, Object object)&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Java Servlet 是和平台无关的服务器端组件，它运行在 Servlet 容器中。Servlet 容器负责 Servlet 和客户的通信以及调用 Servlet 的方法。Servlet 和客户的通信采用“请求/响应”的模式。本篇介绍 Servlet 的 HelloWorld 程序运行的基本原理、Servlet 的生命周期方法、ServletConfig、ServletContext接口等&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xteqg.com1.z0.glb.clouddn.com/novgis%2Fjavaweb-05-servlet%20request.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="programming" scheme="http://www.novgis.com/categories/programming/"/>
    
    
      <category term="Java Web" scheme="http://www.novgis.com/tags/Java-Web/"/>
    
  </entry>
  
  <entry>
    <title>(1) Java Web 应用开发准备</title>
    <link href="http://www.novgis.com/blog/2016-05-05/javaweb-01-base.html"/>
    <id>http://www.novgis.com/blog/2016-05-05/javaweb-01-base.html</id>
    <published>2016-05-05T06:14:21.000Z</published>
    <updated>2016-05-13T02:08:46.331Z</updated>
    
    <content type="html">&lt;p&gt;在 Sun 的 Java Servlet 规范中，对 Java Web 应用作了这样的定义：“Java Web 应用由一组 Servlet、HTML页、实用类（POJO）以及其它可以被绑定的资源构成。它可以在各种供应商提供的实现 Servlet 规范的 Servlet 容器中运行。”本篇介绍了 Tomcat 的安装部署与配置以及 Java WEB 开发的目录结构等内容。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;Java Web 应用中可以包含如下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Servlet（本质上就是一个 Java 类，主不过其是被部署运行到 Servlet 容器当中）&lt;/li&gt;
&lt;li&gt;JSP（会被翻译成 Servlet 然后编译成 .class 文件 本质上也是一个 Java 类）&lt;/li&gt;
&lt;li&gt;实用类（POJO 普通的 Java 类）&lt;/li&gt;
&lt;li&gt;静态文档如 HTML、图片等&lt;/li&gt;
&lt;li&gt;描述 Web 应用的信息（web.xml）&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Servlet-容器&quot;&gt;&lt;a href=&quot;#Servlet-容器&quot; class=&quot;headerlink&quot; title=&quot;Servlet 容器&quot;&gt;&lt;/a&gt;Servlet 容器&lt;/h1&gt;&lt;p&gt;Servlet 容器为 Java Web 应用提供运行时环境，它负责管理 Servlet 和 JSP 的生命周期，以及管理它们的共享数据。目前流行的 Servlet 容器有：&lt;a href=&quot;https://tomcat.apache.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Tomcat&lt;/a&gt;(免费开源也是最常用的)、&lt;a href=&quot;http://www.oracle.com/technetwork/middleware/weblogic/overview/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;WebLogic&lt;/a&gt;、&lt;a href=&quot;http://www-01.ibm.com/software/cn/websphere/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;WebSphere&lt;/a&gt; 等。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xteqg.com1.z0.glb.clouddn.com/novgis%2Fjavaweb-01.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Tomcat-部署及目录结构&quot;&gt;&lt;a href=&quot;#Tomcat-部署及目录结构&quot; class=&quot;headerlink&quot; title=&quot;Tomcat 部署及目录结构&quot;&gt;&lt;/a&gt;Tomcat 部署及目录结构&lt;/h2&gt;&lt;p&gt;绿色部署，从 &lt;a href=&quot;https://tomcat.apache.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Tomcat官网&lt;/a&gt;下载指定版本的压缩包直接解压到非中文目录下，配置系统 JAVA_HOME 环境变量（指向 JDK 的安装根目录）即可。&lt;/p&gt;
&lt;h3 id=&quot;Tomcat-的安装目录结构&quot;&gt;&lt;a href=&quot;#Tomcat-的安装目录结构&quot; class=&quot;headerlink&quot; title=&quot;Tomcat 的安装目录结构&quot;&gt;&lt;/a&gt;Tomcat 的安装目录结构&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://7xteqg.com1.z0.glb.clouddn.com/novgis%2Fjavaweb-02tomcat%20catalog.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;启动-Tomcat-服务器&quot;&gt;&lt;a href=&quot;#启动-Tomcat-服务器&quot; class=&quot;headerlink&quot; title=&quot;启动 Tomcat 服务器&quot;&gt;&lt;/a&gt;启动 Tomcat 服务器&lt;/h3&gt;&lt;p&gt;方式一：通过运行 apache-tomcat-6.0.14\bin 目录下的 startup.bat 批处理命令启动服务器（前提是必须配置了 JAVA_HOME 环境变量）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;启动后可以在浏览器输入 &lt;a href=&quot;localhost:8080&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;localhost:8080&lt;/a&gt; 来检验 Tomcat 服务器部署是否正确&lt;br&gt;Tomcat 默认端口是 8080，可以通过修改 apache-tomcat-6.0.14\conf\server.xml 文件中的配置信息来修改 Tomcat 服务器的端口号&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;Connector&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;port&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;8080&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;protocol&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;HTTP/1.1&quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;attr&quot;&gt;connectionTimeout&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;20000&quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;attr&quot;&gt;redirectPort&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;8443&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;attr&quot;&gt;useBodyEncodingForURI&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;方式二：通过 cmd 命令行的方式启动。首先要在命令行的任意目录下执行某个命令，则要将其所在目录添加到系统 Path 环境变量中；然后执行发现如下提示：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The CATALINA_HOME environment variable is not defined correctly&lt;br&gt;This environment variable is needed to run this program&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;提示要求我们配置 CATALINA_HOME 环境变量，但这个环境变量到底要指向哪个目录不得而知，此时便要去查看 startup.bat 里面到底写的些什么！进去以后会看见这样一段语句：&lt;/p&gt;
&lt;figure class=&quot;highlight gams&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;%CATALINA_HOME%&quot;&lt;/span&gt; == &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt; goto gotHome &lt;span class=&quot;comment&quot;&gt;// 如果没设 CATALINA_HOME 环境变量则跳转到 gotHome&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; CATALINA_HOME=%CURRENT_DIR%&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if &lt;span class=&quot;comment&quot;&gt;exist&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;&quot;%CATALINA_HOME%\bin\catalina.bat&quot;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt; goto okHome&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd &lt;span class=&quot;comment&quot;&gt;..&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;CATALINA_HOME=%cd%&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd &lt;span class=&quot;comment&quot;&gt;%CURRENT_DIR%&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;:gotHome&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if &lt;span class=&quot;comment&quot;&gt;exist&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;&quot;%CATALINA_HOME%\bin\catalina.bat&quot;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt; goto okHome&lt;/span&gt; // 如果存在&lt;span class=&quot;comment&quot;&gt; %CATALINA_HOME%\bin\catalina.bat&lt;/span&gt; 这个文件则跳到&lt;span class=&quot;comment&quot;&gt; okHome&lt;/span&gt;，否则输出如下提示&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &lt;span class=&quot;comment&quot;&gt;The CATALINA_HOME environment variable is not defined correctly&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &lt;span class=&quot;comment&quot;&gt;This environment variable is needed to run this program&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;goto &lt;span class=&quot;comment&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;:okHome&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;EXECUTABLE=%CATALINA_HOME%\bin\catalina.bat&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;那么我们大概知道了 CATALINA_HOME 环境变量下有一个 bin 目录，而 bin 目录又有一个 catalina.bat 文件，由此可知 CATALINA_HOME 指向的应该是 Tomcat 的安装根目录。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;配置好以上系统变量后，就可以在任意命令行目录下使用 &lt;code&gt;startup&lt;/code&gt;、&lt;code&gt;shutdown&lt;/code&gt;、&lt;code&gt;catalina run&lt;/code&gt;、&lt;code&gt;catalina start&lt;/code&gt;、&lt;code&gt;catalina stop&lt;/code&gt;等命令来启动停止 Tomcat 服务器了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;Tomcat-Manager&quot;&gt;&lt;a href=&quot;#Tomcat-Manager&quot; class=&quot;headerlink&quot; title=&quot;Tomcat Manager&quot;&gt;&lt;/a&gt;Tomcat Manager&lt;/h3&gt;&lt;p&gt;Tomcat 提供了一个管理程序：访问 &lt;a href=&quot;http://localhost:8080/manager/html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Tomcat Manager&lt;/a&gt;，登录要求你输入用户名密码，点登录前修改 apache-tomcat-6.0.14\conf 目录下的 tomcat-users.xml 文件，添加如下代码：&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;php&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;?&lt;/span&gt;xml version=&lt;span class=&quot;string&quot;&gt;&#39;1.0&#39;&lt;/span&gt; encoding=&lt;span class=&quot;string&quot;&gt;&#39;utf-8&#39;&lt;/span&gt;&lt;span class=&quot;meta&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;tomcat-users&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;role&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rolename&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;manager&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;username&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;password&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;roles&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;manager&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;tomcat-users&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;Java-Web-应用的开发目录结构&quot;&gt;&lt;a href=&quot;#Java-Web-应用的开发目录结构&quot; class=&quot;headerlink&quot; title=&quot;Java Web 应用的开发目录结构&quot;&gt;&lt;/a&gt;Java Web 应用的开发目录结构&lt;/h1&gt;&lt;p&gt;一个 Web 应用程序是由一组 Servlet、Html页面、类以及其它的资源组成的运行在 Web 服务器上的完整的应用程序，以一种结构化的有层次的目录形式存在，&lt;a href=&quot;http://localhost:8080/docs/appdev/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Tomcat 文档&lt;/a&gt;中规定该目录结构。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xteqg.com1.z0.glb.clouddn.com/novgis%2Fjavaweb-03-webapp%20catalog.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;Java-Web-应用程序在-Tomcat-中部署&quot;&gt;&lt;a href=&quot;#Java-Web-应用程序在-Tomcat-中部署&quot; class=&quot;headerlink&quot; title=&quot;Java Web 应用程序在 Tomcat 中部署&quot;&gt;&lt;/a&gt;Java Web 应用程序在 Tomcat 中部署&lt;/h1&gt;&lt;p&gt;方式一：直接复制应用程序的根目录所有文件到 apache-tomcat-6.0.14\webapps 下&lt;/p&gt;
&lt;p&gt;方式二：以&lt;a href=&quot;http://localhost:8080/docs/config/context.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;虚拟目录&lt;/a&gt;的方式，可以配置任意目录下的 Web 应用程序。在 apache-tomcat-6.0.14\conf 目录下依次创建 Catalina\localhost 目录，然后在 localhost 目录下为 Hello JavaWeb 这个 Web 应用程序建立 test.xml 文件，编辑这个文件输入以下内容：&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!--注意反斜杠的转义--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;Context&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;path&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;/test2&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;docBase&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;F:\\Java\\Samples\\Hello JavaWeb\\WebContent&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;reloadable&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：这里 docBase 配置的是 Web 应用的根目录，而不是 Java 工程的根目录&lt;br&gt;另外，通过 Eclipse JavaEE 创建的项目直接把 java 源文件编译到 bulid/classes 文件夹下而不是 WEB-INF/classes 文件夹&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://7xteqg.com1.z0.glb.clouddn.com/novgis%2Fjavaweb-04-webapp%20deploy.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;从 Tomcat 5 开始，不建议直接在 server.xml 文件中配置 &lt;code&gt;&amp;lt;Context&amp;gt;&lt;/code&gt; 元素，因为 server.xml 文件作为 Tomcat 的主要配置文件，一旦 Tomcat 启动后，将不会再读取这个文件，因此无法在 Tomcat 服务器启动时发布 Web 应用程序。而在 conf/catalina/localhost 文件夹下配置 &lt;code&gt;&amp;lt;Context&amp;gt;&lt;/code&gt; 元素则可以在 Tomcat 已启动的情况下发布 Web 应用。Tomcat将以该 xml 文件的文件名作为 Web 应用程序的上下文路径，而不识别 &lt;code&gt;&amp;lt;Context&amp;gt;&lt;/code&gt; 元素的 path 属性中指定的上下文路径，所以可以在配置 &lt;code&gt;&amp;lt;Context&amp;gt;&lt;/code&gt; 元素时不配置 path 属性。&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在 Sun 的 Java Servlet 规范中，对 Java Web 应用作了这样的定义：“Java Web 应用由一组 Servlet、HTML页、实用类（POJO）以及其它可以被绑定的资源构成。它可以在各种供应商提供的实现 Servlet 规范的 Servlet 容器中运行。”本篇介绍了 Tomcat 的安装部署与配置以及 Java WEB 开发的目录结构等内容。&lt;/p&gt;
    
    </summary>
    
      <category term="programming" scheme="http://www.novgis.com/categories/programming/"/>
    
    
      <category term="Java Web" scheme="http://www.novgis.com/tags/Java-Web/"/>
    
  </entry>
  
  <entry>
    <title>抽象工厂模式</title>
    <link href="http://www.novgis.com/blog/2016-05-05/dp-abstract-factory.html"/>
    <id>http://www.novgis.com/blog/2016-05-05/dp-abstract-factory.html</id>
    <published>2016-05-05T03:42:09.000Z</published>
    <updated>2016-06-01T04:08:44.242Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
      <category term="programming" scheme="http://www.novgis.com/categories/programming/"/>
    
    
      <category term="设计模式" scheme="http://www.novgis.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>访问者模式</title>
    <link href="http://www.novgis.com/blog/2016-05-05/dp-visitor.html"/>
    <id>http://www.novgis.com/blog/2016-05-05/dp-visitor.html</id>
    <published>2016-05-05T03:39:56.000Z</published>
    <updated>2016-06-01T04:09:05.977Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
      <category term="programming" scheme="http://www.novgis.com/categories/programming/"/>
    
    
      <category term="设计模式" scheme="http://www.novgis.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>模板方法模式</title>
    <link href="http://www.novgis.com/blog/2016-05-05/dp-template-method.html"/>
    <id>http://www.novgis.com/blog/2016-05-05/dp-template-method.html</id>
    <published>2016-05-05T03:39:34.000Z</published>
    <updated>2016-06-01T04:09:17.757Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
      <category term="programming" scheme="http://www.novgis.com/categories/programming/"/>
    
    
      <category term="设计模式" scheme="http://www.novgis.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>策略模式</title>
    <link href="http://www.novgis.com/blog/2016-05-05/dp-strategy.html"/>
    <id>http://www.novgis.com/blog/2016-05-05/dp-strategy.html</id>
    <published>2016-05-05T03:39:08.000Z</published>
    <updated>2016-06-01T04:09:35.133Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
      <category term="programming" scheme="http://www.novgis.com/categories/programming/"/>
    
    
      <category term="设计模式" scheme="http://www.novgis.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>状态模式</title>
    <link href="http://www.novgis.com/blog/2016-05-05/dp-state.html"/>
    <id>http://www.novgis.com/blog/2016-05-05/dp-state.html</id>
    <published>2016-05-05T03:38:47.000Z</published>
    <updated>2016-06-01T04:09:42.752Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
      <category term="programming" scheme="http://www.novgis.com/categories/programming/"/>
    
    
      <category term="设计模式" scheme="http://www.novgis.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>观察者模式</title>
    <link href="http://www.novgis.com/blog/2016-05-05/dp-observer.html"/>
    <id>http://www.novgis.com/blog/2016-05-05/dp-observer.html</id>
    <published>2016-05-05T03:38:35.000Z</published>
    <updated>2016-06-01T04:09:53.205Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
      <category term="programming" scheme="http://www.novgis.com/categories/programming/"/>
    
    
      <category term="设计模式" scheme="http://www.novgis.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>备忘录模式</title>
    <link href="http://www.novgis.com/blog/2016-05-05/dp-memento.html"/>
    <id>http://www.novgis.com/blog/2016-05-05/dp-memento.html</id>
    <published>2016-05-05T03:38:23.000Z</published>
    <updated>2016-06-01T04:10:07.008Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
      <category term="programming" scheme="http://www.novgis.com/categories/programming/"/>
    
    
      <category term="设计模式" scheme="http://www.novgis.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>中介者模式</title>
    <link href="http://www.novgis.com/blog/2016-05-05/dp-mediator.html"/>
    <id>http://www.novgis.com/blog/2016-05-05/dp-mediator.html</id>
    <published>2016-05-05T03:38:01.000Z</published>
    <updated>2016-06-01T04:10:21.706Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
      <category term="programming" scheme="http://www.novgis.com/categories/programming/"/>
    
    
      <category term="设计模式" scheme="http://www.novgis.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>迭代器模式</title>
    <link href="http://www.novgis.com/blog/2016-05-05/dp-iterator.html"/>
    <id>http://www.novgis.com/blog/2016-05-05/dp-iterator.html</id>
    <published>2016-05-05T03:37:43.000Z</published>
    <updated>2016-06-01T04:10:33.405Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
      <category term="programming" scheme="http://www.novgis.com/categories/programming/"/>
    
    
      <category term="设计模式" scheme="http://www.novgis.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>解释器模式</title>
    <link href="http://www.novgis.com/blog/2016-05-05/dp-interpreter.html"/>
    <id>http://www.novgis.com/blog/2016-05-05/dp-interpreter.html</id>
    <published>2016-05-05T03:37:30.000Z</published>
    <updated>2016-06-01T04:10:44.258Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
      <category term="programming" scheme="http://www.novgis.com/categories/programming/"/>
    
    
      <category term="设计模式" scheme="http://www.novgis.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>命令模式</title>
    <link href="http://www.novgis.com/blog/2016-05-05/dp-command.html"/>
    <id>http://www.novgis.com/blog/2016-05-05/dp-command.html</id>
    <published>2016-05-05T03:37:10.000Z</published>
    <updated>2016-06-01T04:10:52.963Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
      <category term="programming" scheme="http://www.novgis.com/categories/programming/"/>
    
    
      <category term="设计模式" scheme="http://www.novgis.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>职责链模式</title>
    <link href="http://www.novgis.com/blog/2016-05-05/dp-chain-of-responsibility.html"/>
    <id>http://www.novgis.com/blog/2016-05-05/dp-chain-of-responsibility.html</id>
    <published>2016-05-05T03:36:48.000Z</published>
    <updated>2016-06-01T04:11:13.763Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
      <category term="programming" scheme="http://www.novgis.com/categories/programming/"/>
    
    
      <category term="设计模式" scheme="http://www.novgis.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>享元模式</title>
    <link href="http://www.novgis.com/blog/2016-05-05/dp-flyweight.html"/>
    <id>http://www.novgis.com/blog/2016-05-05/dp-flyweight.html</id>
    <published>2016-05-05T03:34:57.000Z</published>
    <updated>2016-06-01T04:11:28.492Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
      <category term="programming" scheme="http://www.novgis.com/categories/programming/"/>
    
    
      <category term="设计模式" scheme="http://www.novgis.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
</feed>
